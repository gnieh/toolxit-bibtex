/*
* This file is part of the ToolXiT project.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
package toolxit.bibtex
package renderer

/**
 * This renderer simply returns the BibTeX representation of the database,
 * with filtering, sorting and grouping. This may be useful for extracting
 * only some entries from a .bib file.
 *
 * @author Lucas Satabin
 *
 */
class BibRenderer(db: BibTeXDatabase)
    extends BibTeXRenderer[String](db) with UniformRenderer[String] {

  protected[this] def render(groups: List[(String, List[BibEntry])]) =
    "% Generated by ToolXiT BibTeX\n\n" +
      {
        for ((group, entries) ← groups)
          yield "% " + "=" * (18 + group.length) +
          "\n% ======== " + group + " ========\n" +
          "% " + "=" * (18 + group.length) + "\n\n" +
          {
            for (entry ← entries)
              yield entry.toBibTeX
          }.mkString("\n\n")
      }.mkString("\n\n\n")

  protected[this] def renderAny(entry: BibEntry) = entry.toBibTeX

}