/* Generated by ToolXiT BibTeX */
package ${package}

import toolxit.bibtex.BibTeXDatabase
import toolxit.bibtex.renderer.BibTeXRenderer
import toolxit.bibtex.bst.BuiltIn

import scala.util.DynamicVariable

final class ${className}(db: BibTeXDatabase) 
      extends BibTeXRenderer[String](db)
      with BuiltIn {
  
  private[this] val fields = List(
  <#list fields as field>
  "${field}"
  </#list>)
  
  private[this] class EntryContext(val entry: BibEntry) {
    <#list strings as string>
    var ${string}: String = _
    </#list>
  
    <#list ints as int>
    var ${int}: Int = _
    </#list>
  }
  
  private[this] val entryContext =
    new DynamicVariable[Option[EntryContext]](None)
  
  @inline
  def renderArticle(entry: BibEntry) = article(entry)

  @inline
  def renderBook(entry: BibEntry) = book(entry)

  @inline
  def renderBooklet(entry: BibEntry) = booklet(entry)

  @inline
  def renderConference(entry: BibEntry) = conference(entry)

  @inline
  def renderInBook(entry: BibEntry) = inbook(entry)

  @inline
  def renderInCollection(entry: BibEntry) = incollection(entry)

  @inline
  def renderInProceedings(entry: BibEntry) = inproceedings(entry)

  @inline
  def renderManual(entry: BibEntry) = manual(entry)

  @inline
  def renderMasterThesis(entry: BibEntry) = masterthesis(entry)

  @inline
  def renderMisc(entry: BibEntry) = misc(entry)

  @inline
  def renderPhdThesis(entry: BibEntry) = phdthesis(entry)

  @inline
  def renderProceedings(entry: BibEntry) = proceedings(entry)

  @inline
  def renderTechReport(entry: BibEntry) = techreport(entry)

  @inline
  def renderUnpublished(entry: BibEntry) = unpublished(entry)

  @inline
  def renderUnknown(entry: BibEntry) = default(entry)
  
  def article(entry: BibEntry) = {
    ${article-instructions}
  }
  
  def book(entry: BibEntry) = {
    ${book-instructions}
  }
  
  def conference(entry: BibEntry) = {
    ${conference-instructions}
  }
  
  def inbook(entry: BibEntry) = {
    ${inbook-instructions}
  }
  
  def incollection(entry: BibEntry) = {
    ${incollection-instructions}
  }
  
  def inproceedings(entry: BibEntry) = {
    ${inproceedings-instructions}
  }
  
  def manual(entry: BibEntry) = {
    ${manual-instructions}
  }
  
  def masterthesis(entry: BibEntry) = {
    ${masterthesis-instructions}
  }
  
  def misc(entry: BibEntry) = {
    ${misc-instructions}
  }
  
  def phdthesis(entry: BibEntry) = {
    ${phdthesis-instructions}
  }
  
  def proceedings(entry: BibEntry) = {
    ${proceedings-instructions}
  }
  
  def techreport(entry: BibEntry) = {
    ${techreport-instructions}
  }
  
  def unpublished(entry: BibEntry) = {
    ${unpublished-instructions}
  }
  
  def default(entry: BibEntry) = {
    ${default-instructions}
  }
  
}